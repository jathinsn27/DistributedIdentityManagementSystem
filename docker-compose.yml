version: '3'
services:

  membership:
    build: .
    command: ./membership
    ports:
      - "7946:7946"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7946/members" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db-1:
    image: postgres:13
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata1:/var/lib/postgresql/data

  db-2:
    image: postgres:13
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata2:/var/lib/postgresql/data

  db-3:
    image: postgres:13
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata3:/var/lib/postgresql/data

  db-4:
    image: postgres:13
    environment:
      POSTGRES_DB: nodedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata4:/var/lib/postgresql/data

  node-1:
    build: .
    command: ./node
    environment:
      - NODE_ID=1
      - DB_HOST=db-1
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8081:8080"
      - "8001:8001"
    depends_on:
      db-1:
        condition: service_started
      membership:
          condition: service_healthy

  node-2:
    build: .
    command: ./node
    environment:
      - NODE_ID=2
      - DB_HOST=db-2
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8082:8080"
      - "8002:8002"
    depends_on:
      db-2:
        condition: service_started
      membership:
          condition: service_healthy

  node-3:
    build: .
    command: ./node
    environment:
      - NODE_ID=3
      - DB_HOST=db-3
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8083:8080"
      - "8003:8003"
    depends_on:
      db-3:
        condition: service_started
      membership:
          condition: service_healthy

  node-4:
    build: .
    command: ./node
    environment:
      - NODE_ID=4
      - DB_HOST=db-4
      - MEMBERSHIP_HOST=membership:7946
    ports:
      - "8084:8080"
      - "8004:8004"
    depends_on:
      db-4:
        condition: service_started
      membership:
          condition: service_healthy

  middleware:
    build: .
    command: ./middleware
    ports:
      - "8090:8090"
    depends_on:
      - node-1
      - node-2
      - node-3
      - node-4

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - node-1
      - node-2
      - node-3
      - node-4
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - prometheus

volumes:
  pgdata1:
  pgdata2:
  pgdata3:
  pgdata4:
  grafana-storage: